<%- include('../layouts/header'); -%>
    <% if (person.Professions.length> 0) { %>
        <%- include('../layouts/card') %>
            <% } %>
                <section class="section">
                    <div class="buttons">
                        <button id="addProfession" class="button is-fullwidth" type="button">
                            Adcionar Profissão
                        </button>
                        <button id="addPhone" class="button is-fullwidth" type="button">
                            Adcionar Telefone
                        </button>
                        <button id="addLink" class="button is-fullwidth" type="button">
                            Adcionar Conta Social
                        </button>
                    </div>
                    <div class="container is-max-tablet">
                        <form id="dynamicForm" action="/user" method="post">
                            <div id="professionContainer" class="field fieldsGroup">
                                <div class="field fieldUnity">
                                    <div class="field">
                                        <label class="label">Profissão <span class="labelNumber"></span></label>
                                        <div class="control autocompleteWrapperCbo">
                                            <input class="input cboInput" name="profession[]" type="text"
                                                placeholder="Nome da categoria" autocomplete="off">
                                        </div>
                                    </div>
                                    <div class="field">
                                        <div class="control">
                                            <textarea class="textarea" name="jobDescription[]" type="text"
                                                placeholder="Descrição dos serviços"></textarea>
                                        </div>
                                    </div>
                                    <div class="field delButton">
                                        <div class="control buttons is-right">
                                            <button class="button is-small" type="button">
                                                apagar campo
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr>
                            <div id="phoneContainer" class="field fieldsGroup">
                                <div class="field fieldUnity">
                                    <div class="field">
                                        <label class="label">Telefone <span class="labelNumber"></span></label>
                                        <div class="control">
                                            <input class="input" name="phone[]" type="tel"
                                                placeholder="Somente números">
                                        </div>
                                    </div>
                                    <div class="field delButton">
                                        <div class="control buttons is-right">
                                            <button class="button is-small" type="button">
                                                apagar campo
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr>
                            <div id="linkContainer" class="field fieldsGroup">
                                <div class="field fieldUnity">
                                    <div class="field">
                                        <label class="label">Conta Social <span class="labelNumber"></span></label>
                                        <div class="control">
                                            <input class="input" name="link[]" type="text"
                                                placeholder="Link do perfil nas redes sociais">
                                        </div>
                                    </div>
                                    <div class="field delButton">
                                        <div class="control buttons is-right">
                                            <button class="button is-small" type="button">
                                                apagar campo
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr>
                            <div class="field">
                                <div class="control">
                                    <button class="button is-fullwidth is-link" type="submit">Salvar</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </section>
                <%- include('../layouts/footer'); -%>
                    <%= JSON.stringify(person, null, 4) %>
                        <script>
                            document.getElementById('dynamicForm').style.display = 'none'; //retirar

                            document.querySelectorAll('.delButton').forEach(delButton => {
                                delButton.style.display = 'none'; // Retirar
                                delButton.addEventListener('click', () => {
                                    removeField(delButton);
                                })
                            });

                            document.getElementById('addProfession').addEventListener('click', () => {
                                const professionContainer = document.getElementById('professionContainer');
                                const newFieldUnity = addField(professionContainer);
                                if (newFieldUnity) addEventToInputs(newFieldUnity);
                            });

                            document.getElementById('addPhone').addEventListener('click', () => {
                                const phoneContainer = document.getElementById('phoneContainer');
                                addField(phoneContainer);
                            });

                            document.getElementById('addLink').addEventListener('click', () => {
                                const linkContainer = document.getElementById('linkContainer')
                                addField(linkContainer);
                            });

                            function addField(container) {
                                const form = document.getElementById('dynamicForm');
                                if (form.style.display === 'none') {
                                    form.style.display = 'block'; // Torna o formulário visível
                                    return;
                                }
                                container.querySelector('.delButton').style.display = 'block';
                                const fieldUnity = container.querySelector('.fieldUnity')
                                const newFieldUnity = fieldUnity.cloneNode(true);
                                // Limpar valores dos campos no novo conjunto
                                const inputs = newFieldUnity.querySelectorAll('input, textarea');
                                inputs.forEach(input => {
                                    input.value = '';
                                });
                                // Adicionar o novo conjunto ao container
                                container.appendChild(newFieldUnity);
                                numberLabels(container)
                                AddEventToButtons(newFieldUnity);
                                return newFieldUnity;
                            }

                            function addEventToInputs(newFieldUnity) {
                                const cboInput = newFieldUnity.querySelector('.cboInput')
                                cboInput.addEventListener('input', (e) => onInputChange(
                                    window.cbo, "title", e, cboInput.closest(".autocompleteWrapperCbo")
                                ));
                                cboInput.addEventListener('click', (e) => onInputChange(
                                    window.cbo, "title", e, cboInput.closest(".autocompleteWrapperCbo")
                                ));
                            }

                            function AddEventToButtons(newFieldUnity) {
                                const container = newFieldUnity.closest('.fieldsGroup')
                                const delButton = newFieldUnity.querySelector('.delButton')
                                delButton.addEventListener('click', () => {
                                    removeField(delButton);
                                })
                            }

                            function removeField(delButton) {
                                const container = delButton.closest('.fieldsGroup')
                                if (container.childElementCount === 2) {
                                    container.querySelectorAll('.delButton').forEach(delButton => {
                                        delButton.style.display = 'none' // remover
                                    });
                                }
                                delButton.closest('.fieldUnity').remove();
                                numberLabels(container);
                            }

                            function numberLabels(container) {
                                if (container.querySelectorAll('.labelNumber').length === 1) {
                                    container.querySelector('.labelNumber').innerText = null;
                                } else {
                                    container.querySelectorAll('.labelNumber').forEach((label, i) => {
                                        label.innerText = i + 1
                                    });
                                }
                            }
                        </script>